{"name":"qNotify","tagline":"receive qmon emails and text notifications.","body":"qNotify is a single-page sign-in webapp permitting Novell engineers to receive qmon texts and email notifications for their appropriate queues. It has been designed to work in parallel with a configured & running instance of qmon. \r\n\r\nqNotify is a web-application that is built on [Node.js](http://nodejs.org/), which is a platform built on Chrome's JavaScript runtime for building fast, scalable network applications. I used nodejs and a module called [Express.js](http://expressjs.com/) instead of dealing with apache, tomcat, etc. Suffice it to say, nodejs is taking over enterprise web-development for good reasons.\r\n\r\n### qNotify dependencies\r\nI have qNotify installed on a SLES 11 SP3 server with the following dependencies:\r\n* qmon - configured for a team.\r\n* Git-core\r\n* NodeJS\r\n* npm (package manager for nodejs)<br>\r\n_Note: Although I don't anticipate any dependency issues, if there are any problems, consider installing the SLES Development Tools/Kit._\r\n<br>\r\n\r\n**Install Dependencies**:<br>\r\n\r\n1. Install & configure **qmon**<br>\r\nqNotify depends on a running instance of qmon. It essentially passes in terminal commands to update the notification list of qmon and relies on qmon to do the actual notifying: http://proetus.provo.novell.com/qmon/\r\n\r\n1. Install **git-core**\r\n<pre>zypper in git-core</pre>\r\nor if the repository is missing:\r\n<pre>zypper ar http://download.opensuse.org/repositories/devel:/tools:/scm/SLE_11_SP3/devel:tools:scm.repo\r\nzypper in git-core</pre>\r\n\r\n1. Install **NodeJS**<br>\r\n<pre>zypper in nodejs-devel</pre>\r\nor if the repository is missing:\r\n<pre>zypper ar http://download.opensuse.org/repositories/devel:/languages:/nodejs/SLE_11_SP3/devel:languages:nodejs.repo\r\nzypper in nodejs nodejs-devel</pre>\r\n_Note: If needed, here are the binaries: http://nodejs.org/download/_\r\n\r\n1. Install **npm**<br>\r\n<pre>curl -L https://npmjs.org/install.sh | sh</pre>\r\n\r\n### Install qNotify:\r\n1. Clone the qNotify repository using the git clone command:\r\n<pre>cd /srv/www/\r\ngit clone https://github.com/tdharris/qNotify.git</pre>\r\n1. While in the qNotify directory, install its' dependencies with npm:\r\n<pre>cd qNotify\r\nnpm install</pre>\r\n1. Install the rcnotify script:\r\n<pre>cd rc\r\n./make-rc-sles.sh</pre>\r\n\r\n### Configure qNotify:\r\n* In the qNotify directory, there is a config.json file:\r\n<pre>{\r\n        \"listenHttp\": true,\r\n        \"httpPort\": 80,\r\n        \"httpsPort\": 443,\r\n        \"privateKey\": \"./ssl/privatekey.pem\",\r\n        \"certificate\": \"./ssl/certificate.pem\",\r\n        \"logDirectory\": \"./logs\"\r\n}</pre>\r\n_Note: Set listenHttp to false if wallboard is being run on the server (Apache listening on http:80). Otherwise, stick with the defaults._\r\n\r\n### Run qNotify\r\n* From a terminal window: \r\n<pre>rcnotify {start|stop|status|log|users}</pre>\r\n* OR From the qNotify directory:\r\n<pre>npm start</pre>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}